<!DOCTYPE html>
<html lang="en-US">
<head>
    <meta charset="UTF-8">
    <title>Knockout Tutorial</title>
    <link href="/Styles/Site.css" rel="stylesheet" type="text/css" />

    <style type="text/css">
        .red {
            color: red;
        }
    </style>

    <script type="text/javascript" src="/Scripts/jquery-1.8.3.js"></script>
    <script type="text/javascript" src="/Scripts/knockout.js"></script>
    <script src="/Scripts/underscore.js"></script>
</head>


<body>
    <div id="div_message"></div>
    <div class="page">
        <div class="header"></div>

        <div class="main">
            <p>
                Your value:
                <input data-bind="value: someValue, valueUpdate: 'afterkeydown'" />
            </p>
            <p>You have typed: <span data-bind="text: someValue"></span></p>
        </div>

        <script type="text/javascript">

            // "keyup" - updates your view model when the user releases a key
            // "keypress" - updates your view model when the user has typed a key. Unlike keyup, this updates repeatedly while the user holds a key down
            // "afterkeydown" - updates your view model as soon as the user begins typing a character.
            //  This works by catching the browser’s keydown event and handling the event asynchronously.

            // "afterkeydown" is the best choice if you want to keep your view model updated in real-time.

            // 用户自定义函数
            ko.applyBindings({
                someValue: ko.observable("edit me")
            });

            // 页面加载时执行
            $(function () {
                // 加载导航条
                $(".header").load("/navigator.htm .header #div_nav");
            });

        </script>

    </div>
</body>
</html>
